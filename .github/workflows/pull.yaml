name: ci

on:
  pull_request:
    branches:
      - "main"
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Git authentication
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Bump version
        id: bump-version
        run: |
          # Extract current version from the VERSION file
          current_version=$(cat VERSION)

          # Split the version into parts
          IFS='.' read -r -a version_parts <<< "$current_version"

          # Increment the patch version
          if [ "${version_parts[1]}" -eq 9 ] && [ "${version_parts[2]}" -eq 9 ]; then
              major_version=$((version_parts[0] + 1))
              new_version="$major_version.0.0"
          else
              # Increment the minor version if patch version is 99
              if [ "${version_parts[2]}" -eq 9 ]; then
                  minor_version=$((version_parts[1] + 1))
                  new_version="${version_parts[0]}.$minor_version.0"
              else
                  # Increment the patch version
                  patch_version=$((version_parts[2] + 1))
                  new_version="${version_parts[0]}.${version_parts[1]}.$patch_version"
              fi
          fi

          # Form the new version
          new_version="${version_parts[0]}.${version_parts[1]}.$patch_version"

          # Save the new version to the VERSION file
          echo "$new_version" > VERSION

          # Set the new version as an output variable
          echo "::set-output name=new_version::$new_version"

      - name: Commit new version
        run: |
          git add VERSION
          git commit -m "Bump version to ${{ steps.bump-version.outputs.new_version }}"
          git push origin HEAD:main

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.bump-version.outputs.new_version }}

name: cd

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "VERSION"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Git authentication
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Bump version
        id: bump-version
        run: |
          # Extract current version from the VERSION file
          current_version=$(cat VERSION)

          # Split the version into parts
          IFS='.' read -r -a version_parts <<< "$current_version"

          # Initialize variables for the new version
          major_version=${version_parts[0]}
          minor_version=${version_parts[1]}
          patch_version=${version_parts[2]}

          # Increment the version based on current version parts
          if [ "$patch_version" -eq 9 ]; then
              patch_version=0
              if [ "$minor_version" -eq 9 ]; then
                  minor_version=0
                  major_version=$((major_version + 1))
              else
                  minor_version=$((minor_version + 1))
              fi
          else
              patch_version=$((patch_version + 1))
          fi

          # Form the new version
          new_version="$major_version.$minor_version.$patch_version"

          # Save the new version to the VERSION file
          echo "$new_version" > VERSION

          # Set the new version as an output variable
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Commit new version
        run: |
          git add VERSION
          git commit -m "Bump version to ${{ steps.bump-version.outputs.new_version }}"
          git push origin HEAD:main

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.bump-version.outputs.new_version }}

      - name: Notify Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          NEW_VERSION: ${{ steps.bump-version.outputs.new_version }}
          GIT_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
            -d chat_id=${TELEGRAM_CHAT_ID} \
            -d parse_mode=Markdown \
            -d text="*Update Available!*%0A%0A**Version ${NEW_VERSION} of _Chuyến đò cuối cùng_** has been released. Please update to enjoy the latest features and improvements.%0A%0A*What's New:*%0A- \`${GIT_COMMIT_MESSAGE}\`%0A%0AUpdate now to take full advantage of these exciting new enhancements!%0A%0A"

